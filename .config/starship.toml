# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# # Don't print a new line at the start of the prompt
# add_newline = true

# # A minimal left prompt
# format = """$character"""

# # move the rest of the prompt to the right
# right_format = """$all"""

# [line_break]
# disabled = true

# [character]      # The name of the module we are configuring is "character"
# success_symbol = " [❯](green)"     # The "symbol" segment is being set to "➜"
# error_symbol = " [❯](red)"
# # Disable the package module, hiding it from the prompt completely
# [package]
# disabled = false

# [git_status]
# format='([$all_status$ahead_behind]($style) )'

# [git_branch]
# format="[$symbol$branch]($style) "

format = """
[](#9A348E)\
$directory\
[](fg:#9A348E bg:#06969A)\
$git_branch\
$git_status\
[](fg:#06969A bg:#86BBD8)\
$nodejs\
[ ](fg:#86BBD8)
"""

right_format = """
[](fg:#33658A)\
$time\
[](#33658A)\
"""
 
# Disable the blank line at the start of the prompt
# add_newline = false
 
# You can also replace your username with a neat symbol like  to save some space
[username]
show_always = true
style_user = "bg:#9A348E"
style_root = "bg:#9A348E"
format = '[$user ]($style)'
 
[directory]
style = "bg:#9A348E"
format = "[ $path ]($style)"
truncation_length = 3
truncation_symbol = "…/"
 
# Here is how you can shorten some long paths by text replacement
# similar to mapped_locations in Oh My Posh:
[directory.substitutions]
"Documents" = "📄 "
"Downloads" = "📥 "
"Music" = "🎜 "
"Pictures" = "📷 "
# Keep in mind that the order matters. For example:
# "Important Documents" = "  "
# will not be replaced, because "Documents" was already substituted before.
# So either put "Important Documents" before "Documents" or use the substituted version:
# "Important  " = "  "
 
[c]
symbol = "© "
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'
 
[docker_context]
symbol = "🐳 "
style = "bg:#06969A"
format = '[[ $symbol $context ](bg:#06969A)]($style) $path'
 
[elixir]
symbol = "💧 "
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'
 
[elm]
symbol = "🌳 "
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'
 
[git_branch]
symbol = "☊"
style = "bg:#06969A"
format = '[[ $symbol $branch ](bg:#06969A)]($style)'
 
[git_status]
style = "bg:#06969A"
format = '[[($all_status$ahead_behind )](bg:#06969A)]($style)'
 
[golang]
symbol = "🐹 "
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'
 
[haskell]
symbol = "λ "
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'
 
[java]
symbol = "☕ "
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'
 
[julia]
symbol = "ஃ "
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'
 
[nodejs]
symbol = "🔷 "
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'
 
[nim]
symbol = "👑 "
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'
 
[rust]
symbol = "🦀"
style = "bg:#86BBD8"
format = '[[ $symbol ($version) ](bg:#86BBD8)]($style)'
 
[time]
disabled = false
time_format = "%R" # Hour:Minute Format
style = "bg:#33658A"
format = '[[ $time ](bg:#33658A)]($style)'
